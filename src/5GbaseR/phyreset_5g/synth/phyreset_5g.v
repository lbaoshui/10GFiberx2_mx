// phyreset_5g.v

// Generated using ACDS version 18.1 222

`timescale 1 ps / 1 ps
module phyreset_5g (
		input  wire  clock,               //               clock.clk
		input  wire  reset,               //               reset.reset
		output wire  pll_powerdown0,      //      pll_powerdown0.pll_powerdown
		output wire  tx_analogreset0,     //     tx_analogreset0.tx_analogreset
		output wire  tx_analogreset1,     //     tx_analogreset1.tx_analogreset
		output wire  tx_analogreset2,     //     tx_analogreset2.tx_analogreset
		output wire  tx_analogreset3,     //     tx_analogreset3.tx_analogreset
		output wire  tx_digitalreset0,    //    tx_digitalreset0.tx_digitalreset
		output wire  tx_digitalreset1,    //    tx_digitalreset1.tx_digitalreset
		output wire  tx_digitalreset2,    //    tx_digitalreset2.tx_digitalreset
		output wire  tx_digitalreset3,    //    tx_digitalreset3.tx_digitalreset
		output wire  tx_ready0,           //           tx_ready0.tx_ready
		output wire  tx_ready1,           //           tx_ready1.tx_ready
		output wire  tx_ready2,           //           tx_ready2.tx_ready
		output wire  tx_ready3,           //           tx_ready3.tx_ready
		input  wire  pll_locked0,         //         pll_locked0.pll_locked
		input  wire  pll_select0,         //         pll_select0.pll_select
		input  wire  pll_select1,         //         pll_select1.pll_select
		input  wire  pll_select2,         //         pll_select2.pll_select
		input  wire  pll_select3,         //         pll_select3.pll_select
		input  wire  tx_cal_busy0,        //        tx_cal_busy0.tx_cal_busy
		input  wire  tx_cal_busy1,        //        tx_cal_busy1.tx_cal_busy
		input  wire  tx_cal_busy2,        //        tx_cal_busy2.tx_cal_busy
		input  wire  tx_cal_busy3,        //        tx_cal_busy3.tx_cal_busy
		input  wire  pll_cal_busy0,       //       pll_cal_busy0.pll_cal_busy
		output wire  rx_analogreset0,     //     rx_analogreset0.rx_analogreset
		output wire  rx_analogreset1,     //     rx_analogreset1.rx_analogreset
		output wire  rx_analogreset2,     //     rx_analogreset2.rx_analogreset
		output wire  rx_analogreset3,     //     rx_analogreset3.rx_analogreset
		output wire  rx_digitalreset0,    //    rx_digitalreset0.rx_digitalreset
		output wire  rx_digitalreset1,    //    rx_digitalreset1.rx_digitalreset
		output wire  rx_digitalreset2,    //    rx_digitalreset2.rx_digitalreset
		output wire  rx_digitalreset3,    //    rx_digitalreset3.rx_digitalreset
		output wire  rx_ready0,           //           rx_ready0.rx_ready
		output wire  rx_ready1,           //           rx_ready1.rx_ready
		output wire  rx_ready2,           //           rx_ready2.rx_ready
		output wire  rx_ready3,           //           rx_ready3.rx_ready
		input  wire  rx_is_lockedtodata0, // rx_is_lockedtodata0.rx_is_lockedtodata
		input  wire  rx_is_lockedtodata1, // rx_is_lockedtodata1.rx_is_lockedtodata
		input  wire  rx_is_lockedtodata2, // rx_is_lockedtodata2.rx_is_lockedtodata
		input  wire  rx_is_lockedtodata3, // rx_is_lockedtodata3.rx_is_lockedtodata
		input  wire  rx_cal_busy0,        //        rx_cal_busy0.rx_cal_busy
		input  wire  rx_cal_busy1,        //        rx_cal_busy1.rx_cal_busy
		input  wire  rx_cal_busy2,        //        rx_cal_busy2.rx_cal_busy
		input  wire  rx_cal_busy3         //        rx_cal_busy3.rx_cal_busy
	);

	wire  [0:0] xcvr_reset_control_0_pll_powerdown;   // port fragment
	wire  [3:0] xcvr_reset_control_0_rx_digitalreset; // port fragment
	wire  [3:0] xcvr_reset_control_0_tx_analogreset;  // port fragment
	wire  [3:0] xcvr_reset_control_0_rx_ready;        // port fragment
	wire  [3:0] xcvr_reset_control_0_tx_digitalreset; // port fragment
	wire  [3:0] xcvr_reset_control_0_rx_analogreset;  // port fragment
	wire  [3:0] xcvr_reset_control_0_tx_ready;        // port fragment

	altera_xcvr_reset_control #(
		.CHANNELS              (4),
		.PLLS                  (1),
		.SYS_CLK_IN_MHZ        (125),
		.SYNCHRONIZE_RESET     (1),
		.REDUCED_SIM_TIME      (1),
		.TX_PLL_ENABLE         (1),
		.T_PLL_POWERDOWN       (71000),
		.SYNCHRONIZE_PLL_RESET (0),
		.TX_ENABLE             (1),
		.TX_PER_CHANNEL        (1),
		.T_TX_ANALOGRESET      (70000),
		.T_TX_DIGITALRESET     (70020),
		.T_PLL_LOCK_HYST       (70000),
		.EN_PLL_CAL_BUSY       (1),
		.RX_ENABLE             (1),
		.RX_PER_CHANNEL        (1),
		.T_RX_ANALOGRESET      (70040),
		.T_RX_DIGITALRESET     (74000)
	) xcvr_reset_control_0 (
		.clock              (clock),                                                                                                                                                             //   input,  width = 1,               clock.clk
		.reset              (reset),                                                                                                                                                             //   input,  width = 1,               reset.reset
		.pll_powerdown      (xcvr_reset_control_0_pll_powerdown[0]),                                                                                                                             //  output,  width = 1,      pll_powerdown0.pll_powerdown
		.tx_analogreset     ({xcvr_reset_control_0_tx_analogreset[3],xcvr_reset_control_0_tx_analogreset[2],xcvr_reset_control_0_tx_analogreset[1],xcvr_reset_control_0_tx_analogreset[0]}),     //  output,  width = 4,     tx_analogreset0.tx_analogreset
		.tx_digitalreset    ({xcvr_reset_control_0_tx_digitalreset[3],xcvr_reset_control_0_tx_digitalreset[2],xcvr_reset_control_0_tx_digitalreset[1],xcvr_reset_control_0_tx_digitalreset[0]}), //  output,  width = 4,    tx_digitalreset0.tx_digitalreset
		.tx_ready           ({xcvr_reset_control_0_tx_ready[3],xcvr_reset_control_0_tx_ready[2],xcvr_reset_control_0_tx_ready[1],xcvr_reset_control_0_tx_ready[0]}),                             //  output,  width = 4,           tx_ready0.tx_ready
		.pll_locked         (pll_locked0),                                                                                                                                                       //   input,  width = 1,         pll_locked0.pll_locked
		.pll_select         ({pll_select3,pll_select2,pll_select1,pll_select0}),                                                                                                                 //   input,  width = 4,         pll_select0.pll_select
		.tx_cal_busy        ({tx_cal_busy3,tx_cal_busy2,tx_cal_busy1,tx_cal_busy0}),                                                                                                             //   input,  width = 4,        tx_cal_busy0.tx_cal_busy
		.pll_cal_busy       (pll_cal_busy0),                                                                                                                                                     //   input,  width = 1,       pll_cal_busy0.pll_cal_busy
		.rx_analogreset     ({xcvr_reset_control_0_rx_analogreset[3],xcvr_reset_control_0_rx_analogreset[2],xcvr_reset_control_0_rx_analogreset[1],xcvr_reset_control_0_rx_analogreset[0]}),     //  output,  width = 4,     rx_analogreset0.rx_analogreset
		.rx_digitalreset    ({xcvr_reset_control_0_rx_digitalreset[3],xcvr_reset_control_0_rx_digitalreset[2],xcvr_reset_control_0_rx_digitalreset[1],xcvr_reset_control_0_rx_digitalreset[0]}), //  output,  width = 4,    rx_digitalreset0.rx_digitalreset
		.rx_ready           ({xcvr_reset_control_0_rx_ready[3],xcvr_reset_control_0_rx_ready[2],xcvr_reset_control_0_rx_ready[1],xcvr_reset_control_0_rx_ready[0]}),                             //  output,  width = 4,           rx_ready0.rx_ready
		.rx_is_lockedtodata ({rx_is_lockedtodata3,rx_is_lockedtodata2,rx_is_lockedtodata1,rx_is_lockedtodata0}),                                                                                 //   input,  width = 4, rx_is_lockedtodata0.rx_is_lockedtodata
		.rx_cal_busy        ({rx_cal_busy3,rx_cal_busy2,rx_cal_busy1,rx_cal_busy0}),                                                                                                             //   input,  width = 4,        rx_cal_busy0.rx_cal_busy
		.tx_manual          (4'b0000),                                                                                                                                                           // (terminated),                                 
		.rx_manual          (4'b0000),                                                                                                                                                           // (terminated),                                 
		.tx_digitalreset_or (4'b0000),                                                                                                                                                           // (terminated),                                 
		.rx_digitalreset_or (4'b0000)                                                                                                                                                            // (terminated),                                 
	);

	assign pll_powerdown0 = { xcvr_reset_control_0_pll_powerdown[0] };

	assign tx_analogreset0 = { xcvr_reset_control_0_tx_analogreset[0] };

	assign tx_analogreset1 = { xcvr_reset_control_0_tx_analogreset[1] };

	assign tx_analogreset2 = { xcvr_reset_control_0_tx_analogreset[2] };

	assign tx_analogreset3 = { xcvr_reset_control_0_tx_analogreset[3] };

	assign tx_digitalreset0 = { xcvr_reset_control_0_tx_digitalreset[0] };

	assign tx_digitalreset1 = { xcvr_reset_control_0_tx_digitalreset[1] };

	assign tx_digitalreset2 = { xcvr_reset_control_0_tx_digitalreset[2] };

	assign tx_digitalreset3 = { xcvr_reset_control_0_tx_digitalreset[3] };

	assign tx_ready0 = { xcvr_reset_control_0_tx_ready[0] };

	assign tx_ready1 = { xcvr_reset_control_0_tx_ready[1] };

	assign tx_ready2 = { xcvr_reset_control_0_tx_ready[2] };

	assign tx_ready3 = { xcvr_reset_control_0_tx_ready[3] };

	assign rx_analogreset0 = { xcvr_reset_control_0_rx_analogreset[0] };

	assign rx_analogreset1 = { xcvr_reset_control_0_rx_analogreset[1] };

	assign rx_analogreset2 = { xcvr_reset_control_0_rx_analogreset[2] };

	assign rx_analogreset3 = { xcvr_reset_control_0_rx_analogreset[3] };

	assign rx_digitalreset0 = { xcvr_reset_control_0_rx_digitalreset[0] };

	assign rx_digitalreset1 = { xcvr_reset_control_0_rx_digitalreset[1] };

	assign rx_digitalreset2 = { xcvr_reset_control_0_rx_digitalreset[2] };

	assign rx_digitalreset3 = { xcvr_reset_control_0_rx_digitalreset[3] };

	assign rx_ready0 = { xcvr_reset_control_0_rx_ready[0] };

	assign rx_ready1 = { xcvr_reset_control_0_rx_ready[1] };

	assign rx_ready2 = { xcvr_reset_control_0_rx_ready[2] };

	assign rx_ready3 = { xcvr_reset_control_0_rx_ready[3] };

endmodule
